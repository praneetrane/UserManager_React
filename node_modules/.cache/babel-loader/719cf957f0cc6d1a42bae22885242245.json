{"ast":null,"code":"'use strict';\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\nconst identity = val => val;\n/* eslint-disable no-control-regex */\n// this is a modified version of https://github.com/chalk/ansi-regex (MIT License)\n\n\nconst ANSI_REGEX = /[\\u001b\\u009b][[\\]#;?()]*(?:(?:(?:[^\\W_]*;?[^\\W_]*)\\u0007)|(?:(?:[0-9]{1,4}(;[0-9]{0,4})*)?[~0-9=<>cf-nqrtyA-PRZ]))/g;\n\nconst create = () => {\n  const colors = {\n    enabled: true,\n    visible: true,\n    styles: {},\n    keys: {}\n  };\n\n  if ('FORCE_COLOR' in process.env) {\n    colors.enabled = process.env.FORCE_COLOR !== '0';\n  }\n\n  const ansi = style => {\n    let open = style.open = `\\u001b[${style.codes[0]}m`;\n    let close = style.close = `\\u001b[${style.codes[1]}m`;\n    let regex = style.regex = new RegExp(`\\\\u001b\\\\[${style.codes[1]}m`, 'g');\n\n    style.wrap = (input, newline) => {\n      if (input.includes(close)) input = input.replace(regex, close + open);\n      let output = open + input + close; // see https://github.com/chalk/chalk/pull/92, thanks to the\n      // chalk contributors for this fix. However, we've confirmed that\n      // this issue is also present in Windows terminals\n\n      return newline ? output.replace(/\\r*\\n/g, `${close}$&${open}`) : output;\n    };\n\n    return style;\n  };\n\n  const wrap = (style, input, newline) => {\n    return typeof style === 'function' ? style(input) : style.wrap(input, newline);\n  };\n\n  const style = (input, stack) => {\n    if (input === '' || input == null) return '';\n    if (colors.enabled === false) return input;\n    if (colors.visible === false) return '';\n    let str = '' + input;\n    let nl = str.includes('\\n');\n    let n = stack.length;\n\n    if (n > 0 && stack.includes('unstyle')) {\n      stack = [...new Set(['unstyle', ...stack])].reverse();\n    }\n\n    while (n-- > 0) str = wrap(colors.styles[stack[n]], str, nl);\n\n    return str;\n  };\n\n  const define = (name, codes, type) => {\n    colors.styles[name] = ansi({\n      name,\n      codes\n    });\n    let keys = colors.keys[type] || (colors.keys[type] = []);\n    keys.push(name);\n    Reflect.defineProperty(colors, name, {\n      configurable: true,\n      enumerable: true,\n\n      set(value) {\n        colors.alias(name, value);\n      },\n\n      get() {\n        let color = input => style(input, color.stack);\n\n        Reflect.setPrototypeOf(color, colors);\n        color.stack = this.stack ? this.stack.concat(name) : [name];\n        return color;\n      }\n\n    });\n  };\n\n  define('reset', [0, 0], 'modifier');\n  define('bold', [1, 22], 'modifier');\n  define('dim', [2, 22], 'modifier');\n  define('italic', [3, 23], 'modifier');\n  define('underline', [4, 24], 'modifier');\n  define('inverse', [7, 27], 'modifier');\n  define('hidden', [8, 28], 'modifier');\n  define('strikethrough', [9, 29], 'modifier');\n  define('black', [30, 39], 'color');\n  define('red', [31, 39], 'color');\n  define('green', [32, 39], 'color');\n  define('yellow', [33, 39], 'color');\n  define('blue', [34, 39], 'color');\n  define('magenta', [35, 39], 'color');\n  define('cyan', [36, 39], 'color');\n  define('white', [37, 39], 'color');\n  define('gray', [90, 39], 'color');\n  define('grey', [90, 39], 'color');\n  define('bgBlack', [40, 49], 'bg');\n  define('bgRed', [41, 49], 'bg');\n  define('bgGreen', [42, 49], 'bg');\n  define('bgYellow', [43, 49], 'bg');\n  define('bgBlue', [44, 49], 'bg');\n  define('bgMagenta', [45, 49], 'bg');\n  define('bgCyan', [46, 49], 'bg');\n  define('bgWhite', [47, 49], 'bg');\n  define('blackBright', [90, 39], 'bright');\n  define('redBright', [91, 39], 'bright');\n  define('greenBright', [92, 39], 'bright');\n  define('yellowBright', [93, 39], 'bright');\n  define('blueBright', [94, 39], 'bright');\n  define('magentaBright', [95, 39], 'bright');\n  define('cyanBright', [96, 39], 'bright');\n  define('whiteBright', [97, 39], 'bright');\n  define('bgBlackBright', [100, 49], 'bgBright');\n  define('bgRedBright', [101, 49], 'bgBright');\n  define('bgGreenBright', [102, 49], 'bgBright');\n  define('bgYellowBright', [103, 49], 'bgBright');\n  define('bgBlueBright', [104, 49], 'bgBright');\n  define('bgMagentaBright', [105, 49], 'bgBright');\n  define('bgCyanBright', [106, 49], 'bgBright');\n  define('bgWhiteBright', [107, 49], 'bgBright');\n  colors.ansiRegex = ANSI_REGEX;\n\n  colors.hasColor = colors.hasAnsi = str => {\n    colors.ansiRegex.lastIndex = 0;\n    return typeof str === 'string' && str !== '' && colors.ansiRegex.test(str);\n  };\n\n  colors.alias = (name, color) => {\n    let fn = typeof color === 'string' ? colors[color] : color;\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Expected alias to be the name of an existing color (string) or a function');\n    }\n\n    if (!fn.stack) {\n      Reflect.defineProperty(fn, 'name', {\n        value: name\n      });\n      colors.styles[name] = fn;\n      fn.stack = [name];\n    }\n\n    Reflect.defineProperty(colors, name, {\n      configurable: true,\n      enumerable: true,\n\n      set(value) {\n        colors.alias(name, value);\n      },\n\n      get() {\n        let color = input => style(input, color.stack);\n\n        Reflect.setPrototypeOf(color, colors);\n        color.stack = this.stack ? this.stack.concat(fn.stack) : fn.stack;\n        return color;\n      }\n\n    });\n  };\n\n  colors.theme = custom => {\n    if (!isObject(custom)) throw new TypeError('Expected theme to be an object');\n\n    for (let name of Object.keys(custom)) {\n      colors.alias(name, custom[name]);\n    }\n\n    return colors;\n  };\n\n  colors.alias('unstyle', str => {\n    if (typeof str === 'string' && str !== '') {\n      colors.ansiRegex.lastIndex = 0;\n      return str.replace(colors.ansiRegex, '');\n    }\n\n    return '';\n  });\n  colors.alias('noop', str => str);\n  colors.none = colors.clear = colors.noop;\n  colors.stripColor = colors.unstyle;\n  colors.symbols = require('./symbols');\n  colors.define = define;\n  return colors;\n};\n\nmodule.exports = create();\nmodule.exports.create = create;","map":{"version":3,"sources":["D:/Learning/React JS/React-Complete Guide (Udemy)/UserManager_React/node_modules/ansi-colors/index.js"],"names":["isObject","val","Array","isArray","identity","ANSI_REGEX","create","colors","enabled","visible","styles","keys","process","env","FORCE_COLOR","ansi","style","open","codes","close","regex","RegExp","wrap","input","newline","includes","replace","output","stack","str","nl","n","length","Set","reverse","define","name","type","push","Reflect","defineProperty","configurable","enumerable","set","value","alias","get","color","setPrototypeOf","concat","ansiRegex","hasColor","hasAnsi","lastIndex","test","fn","TypeError","theme","custom","Object","none","clear","noop","stripColor","unstyle","symbols","require","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,GAAG,IAAIA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,QAA/B,IAA2C,CAACC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAApE;;AACA,MAAMG,QAAQ,GAAGH,GAAG,IAAIA,GAAxB;AAEA;AACA;;;AACA,MAAMI,UAAU,GAAG,sHAAnB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,MAAM,GAAG;AAAEC,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,OAAO,EAAE,IAA1B;AAAgCC,IAAAA,MAAM,EAAE,EAAxC;AAA4CC,IAAAA,IAAI,EAAE;AAAlD,GAAf;;AAEA,MAAI,iBAAiBC,OAAO,CAACC,GAA7B,EAAkC;AAChCN,IAAAA,MAAM,CAACC,OAAP,GAAiBI,OAAO,CAACC,GAAR,CAAYC,WAAZ,KAA4B,GAA7C;AACD;;AAED,QAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAIC,IAAI,GAAGD,KAAK,CAACC,IAAN,GAAc,UAASD,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAe,GAAjD;AACA,QAAIC,KAAK,GAAGH,KAAK,CAACG,KAAN,GAAe,UAASH,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAe,GAAnD;AACA,QAAIE,KAAK,GAAGJ,KAAK,CAACI,KAAN,GAAc,IAAIC,MAAJ,CAAY,aAAYL,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAe,GAAvC,EAA2C,GAA3C,CAA1B;;AACAF,IAAAA,KAAK,CAACM,IAAN,GAAa,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC/B,UAAID,KAAK,CAACE,QAAN,CAAeN,KAAf,CAAJ,EAA2BI,KAAK,GAAGA,KAAK,CAACG,OAAN,CAAcN,KAAd,EAAqBD,KAAK,GAAGF,IAA7B,CAAR;AAC3B,UAAIU,MAAM,GAAGV,IAAI,GAAGM,KAAP,GAAeJ,KAA5B,CAF+B,CAG/B;AACA;AACA;;AACA,aAAOK,OAAO,GAAGG,MAAM,CAACD,OAAP,CAAe,QAAf,EAA0B,GAAEP,KAAM,KAAIF,IAAK,EAA3C,CAAH,GAAmDU,MAAjE;AACD,KAPD;;AAQA,WAAOX,KAAP;AACD,GAbD;;AAeA,QAAMM,IAAI,GAAG,CAACN,KAAD,EAAQO,KAAR,EAAeC,OAAf,KAA2B;AACtC,WAAO,OAAOR,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,CAACO,KAAD,CAAnC,GAA6CP,KAAK,CAACM,IAAN,CAAWC,KAAX,EAAkBC,OAAlB,CAApD;AACD,GAFD;;AAIA,QAAMR,KAAK,GAAG,CAACO,KAAD,EAAQK,KAAR,KAAkB;AAC9B,QAAIL,KAAK,KAAK,EAAV,IAAgBA,KAAK,IAAI,IAA7B,EAAmC,OAAO,EAAP;AACnC,QAAIhB,MAAM,CAACC,OAAP,KAAmB,KAAvB,EAA8B,OAAOe,KAAP;AAC9B,QAAIhB,MAAM,CAACE,OAAP,KAAmB,KAAvB,EAA8B,OAAO,EAAP;AAC9B,QAAIoB,GAAG,GAAG,KAAKN,KAAf;AACA,QAAIO,EAAE,GAAGD,GAAG,CAACJ,QAAJ,CAAa,IAAb,CAAT;AACA,QAAIM,CAAC,GAAGH,KAAK,CAACI,MAAd;;AACA,QAAID,CAAC,GAAG,CAAJ,IAASH,KAAK,CAACH,QAAN,CAAe,SAAf,CAAb,EAAwC;AACtCG,MAAAA,KAAK,GAAG,CAAC,GAAG,IAAIK,GAAJ,CAAQ,CAAC,SAAD,EAAY,GAAGL,KAAf,CAAR,CAAJ,EAAoCM,OAApC,EAAR;AACD;;AACD,WAAOH,CAAC,KAAK,CAAb,EAAgBF,GAAG,GAAGP,IAAI,CAACf,MAAM,CAACG,MAAP,CAAckB,KAAK,CAACG,CAAD,CAAnB,CAAD,EAA0BF,GAA1B,EAA+BC,EAA/B,CAAV;;AAChB,WAAOD,GAAP;AACD,GAZD;;AAcA,QAAMM,MAAM,GAAG,CAACC,IAAD,EAAOlB,KAAP,EAAcmB,IAAd,KAAuB;AACpC9B,IAAAA,MAAM,CAACG,MAAP,CAAc0B,IAAd,IAAsBrB,IAAI,CAAC;AAAEqB,MAAAA,IAAF;AAAQlB,MAAAA;AAAR,KAAD,CAA1B;AACA,QAAIP,IAAI,GAAGJ,MAAM,CAACI,IAAP,CAAY0B,IAAZ,MAAsB9B,MAAM,CAACI,IAAP,CAAY0B,IAAZ,IAAoB,EAA1C,CAAX;AACA1B,IAAAA,IAAI,CAAC2B,IAAL,CAAUF,IAAV;AAEAG,IAAAA,OAAO,CAACC,cAAR,CAAuBjC,MAAvB,EAA+B6B,IAA/B,EAAqC;AACnCK,MAAAA,YAAY,EAAE,IADqB;AAEnCC,MAAAA,UAAU,EAAE,IAFuB;;AAGnCC,MAAAA,GAAG,CAACC,KAAD,EAAQ;AACTrC,QAAAA,MAAM,CAACsC,KAAP,CAAaT,IAAb,EAAmBQ,KAAnB;AACD,OALkC;;AAMnCE,MAAAA,GAAG,GAAG;AACJ,YAAIC,KAAK,GAAGxB,KAAK,IAAIP,KAAK,CAACO,KAAD,EAAQwB,KAAK,CAACnB,KAAd,CAA1B;;AACAW,QAAAA,OAAO,CAACS,cAAR,CAAuBD,KAAvB,EAA8BxC,MAA9B;AACAwC,QAAAA,KAAK,CAACnB,KAAN,GAAc,KAAKA,KAAL,GAAa,KAAKA,KAAL,CAAWqB,MAAX,CAAkBb,IAAlB,CAAb,GAAuC,CAACA,IAAD,CAArD;AACA,eAAOW,KAAP;AACD;;AAXkC,KAArC;AAaD,GAlBD;;AAoBAZ,EAAAA,MAAM,CAAC,OAAD,EAAU,CAAC,CAAD,EAAI,CAAJ,CAAV,EAAkB,UAAlB,CAAN;AACAA,EAAAA,MAAM,CAAC,MAAD,EAAS,CAAC,CAAD,EAAI,EAAJ,CAAT,EAAkB,UAAlB,CAAN;AACAA,EAAAA,MAAM,CAAC,KAAD,EAAQ,CAAC,CAAD,EAAI,EAAJ,CAAR,EAAiB,UAAjB,CAAN;AACAA,EAAAA,MAAM,CAAC,QAAD,EAAW,CAAC,CAAD,EAAI,EAAJ,CAAX,EAAoB,UAApB,CAAN;AACAA,EAAAA,MAAM,CAAC,WAAD,EAAc,CAAC,CAAD,EAAI,EAAJ,CAAd,EAAuB,UAAvB,CAAN;AACAA,EAAAA,MAAM,CAAC,SAAD,EAAY,CAAC,CAAD,EAAI,EAAJ,CAAZ,EAAqB,UAArB,CAAN;AACAA,EAAAA,MAAM,CAAC,QAAD,EAAW,CAAC,CAAD,EAAI,EAAJ,CAAX,EAAoB,UAApB,CAAN;AACAA,EAAAA,MAAM,CAAC,eAAD,EAAkB,CAAC,CAAD,EAAI,EAAJ,CAAlB,EAA2B,UAA3B,CAAN;AAEAA,EAAAA,MAAM,CAAC,OAAD,EAAU,CAAC,EAAD,EAAK,EAAL,CAAV,EAAoB,OAApB,CAAN;AACAA,EAAAA,MAAM,CAAC,KAAD,EAAQ,CAAC,EAAD,EAAK,EAAL,CAAR,EAAkB,OAAlB,CAAN;AACAA,EAAAA,MAAM,CAAC,OAAD,EAAU,CAAC,EAAD,EAAK,EAAL,CAAV,EAAoB,OAApB,CAAN;AACAA,EAAAA,MAAM,CAAC,QAAD,EAAW,CAAC,EAAD,EAAK,EAAL,CAAX,EAAqB,OAArB,CAAN;AACAA,EAAAA,MAAM,CAAC,MAAD,EAAS,CAAC,EAAD,EAAK,EAAL,CAAT,EAAmB,OAAnB,CAAN;AACAA,EAAAA,MAAM,CAAC,SAAD,EAAY,CAAC,EAAD,EAAK,EAAL,CAAZ,EAAsB,OAAtB,CAAN;AACAA,EAAAA,MAAM,CAAC,MAAD,EAAS,CAAC,EAAD,EAAK,EAAL,CAAT,EAAmB,OAAnB,CAAN;AACAA,EAAAA,MAAM,CAAC,OAAD,EAAU,CAAC,EAAD,EAAK,EAAL,CAAV,EAAoB,OAApB,CAAN;AACAA,EAAAA,MAAM,CAAC,MAAD,EAAS,CAAC,EAAD,EAAK,EAAL,CAAT,EAAmB,OAAnB,CAAN;AACAA,EAAAA,MAAM,CAAC,MAAD,EAAS,CAAC,EAAD,EAAK,EAAL,CAAT,EAAmB,OAAnB,CAAN;AAEAA,EAAAA,MAAM,CAAC,SAAD,EAAY,CAAC,EAAD,EAAK,EAAL,CAAZ,EAAsB,IAAtB,CAAN;AACAA,EAAAA,MAAM,CAAC,OAAD,EAAU,CAAC,EAAD,EAAK,EAAL,CAAV,EAAoB,IAApB,CAAN;AACAA,EAAAA,MAAM,CAAC,SAAD,EAAY,CAAC,EAAD,EAAK,EAAL,CAAZ,EAAsB,IAAtB,CAAN;AACAA,EAAAA,MAAM,CAAC,UAAD,EAAa,CAAC,EAAD,EAAK,EAAL,CAAb,EAAuB,IAAvB,CAAN;AACAA,EAAAA,MAAM,CAAC,QAAD,EAAW,CAAC,EAAD,EAAK,EAAL,CAAX,EAAqB,IAArB,CAAN;AACAA,EAAAA,MAAM,CAAC,WAAD,EAAc,CAAC,EAAD,EAAK,EAAL,CAAd,EAAwB,IAAxB,CAAN;AACAA,EAAAA,MAAM,CAAC,QAAD,EAAW,CAAC,EAAD,EAAK,EAAL,CAAX,EAAqB,IAArB,CAAN;AACAA,EAAAA,MAAM,CAAC,SAAD,EAAY,CAAC,EAAD,EAAK,EAAL,CAAZ,EAAsB,IAAtB,CAAN;AAEAA,EAAAA,MAAM,CAAC,aAAD,EAAgB,CAAC,EAAD,EAAK,EAAL,CAAhB,EAA0B,QAA1B,CAAN;AACAA,EAAAA,MAAM,CAAC,WAAD,EAAc,CAAC,EAAD,EAAK,EAAL,CAAd,EAAwB,QAAxB,CAAN;AACAA,EAAAA,MAAM,CAAC,aAAD,EAAgB,CAAC,EAAD,EAAK,EAAL,CAAhB,EAA0B,QAA1B,CAAN;AACAA,EAAAA,MAAM,CAAC,cAAD,EAAiB,CAAC,EAAD,EAAK,EAAL,CAAjB,EAA2B,QAA3B,CAAN;AACAA,EAAAA,MAAM,CAAC,YAAD,EAAe,CAAC,EAAD,EAAK,EAAL,CAAf,EAAyB,QAAzB,CAAN;AACAA,EAAAA,MAAM,CAAC,eAAD,EAAkB,CAAC,EAAD,EAAK,EAAL,CAAlB,EAA4B,QAA5B,CAAN;AACAA,EAAAA,MAAM,CAAC,YAAD,EAAe,CAAC,EAAD,EAAK,EAAL,CAAf,EAAyB,QAAzB,CAAN;AACAA,EAAAA,MAAM,CAAC,aAAD,EAAgB,CAAC,EAAD,EAAK,EAAL,CAAhB,EAA0B,QAA1B,CAAN;AAEAA,EAAAA,MAAM,CAAC,eAAD,EAAkB,CAAC,GAAD,EAAM,EAAN,CAAlB,EAA6B,UAA7B,CAAN;AACAA,EAAAA,MAAM,CAAC,aAAD,EAAgB,CAAC,GAAD,EAAM,EAAN,CAAhB,EAA2B,UAA3B,CAAN;AACAA,EAAAA,MAAM,CAAC,eAAD,EAAkB,CAAC,GAAD,EAAM,EAAN,CAAlB,EAA6B,UAA7B,CAAN;AACAA,EAAAA,MAAM,CAAC,gBAAD,EAAmB,CAAC,GAAD,EAAM,EAAN,CAAnB,EAA8B,UAA9B,CAAN;AACAA,EAAAA,MAAM,CAAC,cAAD,EAAiB,CAAC,GAAD,EAAM,EAAN,CAAjB,EAA4B,UAA5B,CAAN;AACAA,EAAAA,MAAM,CAAC,iBAAD,EAAoB,CAAC,GAAD,EAAM,EAAN,CAApB,EAA+B,UAA/B,CAAN;AACAA,EAAAA,MAAM,CAAC,cAAD,EAAiB,CAAC,GAAD,EAAM,EAAN,CAAjB,EAA4B,UAA5B,CAAN;AACAA,EAAAA,MAAM,CAAC,eAAD,EAAkB,CAAC,GAAD,EAAM,EAAN,CAAlB,EAA6B,UAA7B,CAAN;AAEA5B,EAAAA,MAAM,CAAC2C,SAAP,GAAmB7C,UAAnB;;AACAE,EAAAA,MAAM,CAAC4C,QAAP,GAAkB5C,MAAM,CAAC6C,OAAP,GAAiBvB,GAAG,IAAI;AACxCtB,IAAAA,MAAM,CAAC2C,SAAP,CAAiBG,SAAjB,GAA6B,CAA7B;AACA,WAAO,OAAOxB,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,EAAnC,IAAyCtB,MAAM,CAAC2C,SAAP,CAAiBI,IAAjB,CAAsBzB,GAAtB,CAAhD;AACD,GAHD;;AAKAtB,EAAAA,MAAM,CAACsC,KAAP,GAAe,CAACT,IAAD,EAAOW,KAAP,KAAiB;AAC9B,QAAIQ,EAAE,GAAG,OAAOR,KAAP,KAAiB,QAAjB,GAA4BxC,MAAM,CAACwC,KAAD,CAAlC,GAA4CA,KAArD;;AAEA,QAAI,OAAOQ,EAAP,KAAc,UAAlB,EAA8B;AAC5B,YAAM,IAAIC,SAAJ,CAAc,2EAAd,CAAN;AACD;;AAED,QAAI,CAACD,EAAE,CAAC3B,KAAR,EAAe;AACbW,MAAAA,OAAO,CAACC,cAAR,CAAuBe,EAAvB,EAA2B,MAA3B,EAAmC;AAAEX,QAAAA,KAAK,EAAER;AAAT,OAAnC;AACA7B,MAAAA,MAAM,CAACG,MAAP,CAAc0B,IAAd,IAAsBmB,EAAtB;AACAA,MAAAA,EAAE,CAAC3B,KAAH,GAAW,CAACQ,IAAD,CAAX;AACD;;AAEDG,IAAAA,OAAO,CAACC,cAAR,CAAuBjC,MAAvB,EAA+B6B,IAA/B,EAAqC;AACnCK,MAAAA,YAAY,EAAE,IADqB;AAEnCC,MAAAA,UAAU,EAAE,IAFuB;;AAGnCC,MAAAA,GAAG,CAACC,KAAD,EAAQ;AACTrC,QAAAA,MAAM,CAACsC,KAAP,CAAaT,IAAb,EAAmBQ,KAAnB;AACD,OALkC;;AAMnCE,MAAAA,GAAG,GAAG;AACJ,YAAIC,KAAK,GAAGxB,KAAK,IAAIP,KAAK,CAACO,KAAD,EAAQwB,KAAK,CAACnB,KAAd,CAA1B;;AACAW,QAAAA,OAAO,CAACS,cAAR,CAAuBD,KAAvB,EAA8BxC,MAA9B;AACAwC,QAAAA,KAAK,CAACnB,KAAN,GAAc,KAAKA,KAAL,GAAa,KAAKA,KAAL,CAAWqB,MAAX,CAAkBM,EAAE,CAAC3B,KAArB,CAAb,GAA2C2B,EAAE,CAAC3B,KAA5D;AACA,eAAOmB,KAAP;AACD;;AAXkC,KAArC;AAaD,GA1BD;;AA4BAxC,EAAAA,MAAM,CAACkD,KAAP,GAAeC,MAAM,IAAI;AACvB,QAAI,CAAC1D,QAAQ,CAAC0D,MAAD,CAAb,EAAuB,MAAM,IAAIF,SAAJ,CAAc,gCAAd,CAAN;;AACvB,SAAK,IAAIpB,IAAT,IAAiBuB,MAAM,CAAChD,IAAP,CAAY+C,MAAZ,CAAjB,EAAsC;AACpCnD,MAAAA,MAAM,CAACsC,KAAP,CAAaT,IAAb,EAAmBsB,MAAM,CAACtB,IAAD,CAAzB;AACD;;AACD,WAAO7B,MAAP;AACD,GAND;;AAQAA,EAAAA,MAAM,CAACsC,KAAP,CAAa,SAAb,EAAwBhB,GAAG,IAAI;AAC7B,QAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,EAAvC,EAA2C;AACzCtB,MAAAA,MAAM,CAAC2C,SAAP,CAAiBG,SAAjB,GAA6B,CAA7B;AACA,aAAOxB,GAAG,CAACH,OAAJ,CAAYnB,MAAM,CAAC2C,SAAnB,EAA8B,EAA9B,CAAP;AACD;;AACD,WAAO,EAAP;AACD,GAND;AAQA3C,EAAAA,MAAM,CAACsC,KAAP,CAAa,MAAb,EAAqBhB,GAAG,IAAIA,GAA5B;AACAtB,EAAAA,MAAM,CAACqD,IAAP,GAAcrD,MAAM,CAACsD,KAAP,GAAetD,MAAM,CAACuD,IAApC;AAEAvD,EAAAA,MAAM,CAACwD,UAAP,GAAoBxD,MAAM,CAACyD,OAA3B;AACAzD,EAAAA,MAAM,CAAC0D,OAAP,GAAiBC,OAAO,CAAC,WAAD,CAAxB;AACA3D,EAAAA,MAAM,CAAC4B,MAAP,GAAgBA,MAAhB;AACA,SAAO5B,MAAP;AACD,CApKD;;AAsKA4D,MAAM,CAACC,OAAP,GAAiB9D,MAAM,EAAvB;AACA6D,MAAM,CAACC,OAAP,CAAe9D,MAAf,GAAwBA,MAAxB","sourcesContent":["'use strict';\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nconst identity = val => val;\n\n/* eslint-disable no-control-regex */\n// this is a modified version of https://github.com/chalk/ansi-regex (MIT License)\nconst ANSI_REGEX = /[\\u001b\\u009b][[\\]#;?()]*(?:(?:(?:[^\\W_]*;?[^\\W_]*)\\u0007)|(?:(?:[0-9]{1,4}(;[0-9]{0,4})*)?[~0-9=<>cf-nqrtyA-PRZ]))/g;\n\nconst create = () => {\n  const colors = { enabled: true, visible: true, styles: {}, keys: {} };\n\n  if ('FORCE_COLOR' in process.env) {\n    colors.enabled = process.env.FORCE_COLOR !== '0';\n  }\n\n  const ansi = style => {\n    let open = style.open = `\\u001b[${style.codes[0]}m`;\n    let close = style.close = `\\u001b[${style.codes[1]}m`;\n    let regex = style.regex = new RegExp(`\\\\u001b\\\\[${style.codes[1]}m`, 'g');\n    style.wrap = (input, newline) => {\n      if (input.includes(close)) input = input.replace(regex, close + open);\n      let output = open + input + close;\n      // see https://github.com/chalk/chalk/pull/92, thanks to the\n      // chalk contributors for this fix. However, we've confirmed that\n      // this issue is also present in Windows terminals\n      return newline ? output.replace(/\\r*\\n/g, `${close}$&${open}`) : output;\n    };\n    return style;\n  };\n\n  const wrap = (style, input, newline) => {\n    return typeof style === 'function' ? style(input) : style.wrap(input, newline);\n  };\n\n  const style = (input, stack) => {\n    if (input === '' || input == null) return '';\n    if (colors.enabled === false) return input;\n    if (colors.visible === false) return '';\n    let str = '' + input;\n    let nl = str.includes('\\n');\n    let n = stack.length;\n    if (n > 0 && stack.includes('unstyle')) {\n      stack = [...new Set(['unstyle', ...stack])].reverse();\n    }\n    while (n-- > 0) str = wrap(colors.styles[stack[n]], str, nl);\n    return str;\n  };\n\n  const define = (name, codes, type) => {\n    colors.styles[name] = ansi({ name, codes });\n    let keys = colors.keys[type] || (colors.keys[type] = []);\n    keys.push(name);\n\n    Reflect.defineProperty(colors, name, {\n      configurable: true,\n      enumerable: true,\n      set(value) {\n        colors.alias(name, value);\n      },\n      get() {\n        let color = input => style(input, color.stack);\n        Reflect.setPrototypeOf(color, colors);\n        color.stack = this.stack ? this.stack.concat(name) : [name];\n        return color;\n      }\n    });\n  };\n\n  define('reset', [0, 0], 'modifier');\n  define('bold', [1, 22], 'modifier');\n  define('dim', [2, 22], 'modifier');\n  define('italic', [3, 23], 'modifier');\n  define('underline', [4, 24], 'modifier');\n  define('inverse', [7, 27], 'modifier');\n  define('hidden', [8, 28], 'modifier');\n  define('strikethrough', [9, 29], 'modifier');\n\n  define('black', [30, 39], 'color');\n  define('red', [31, 39], 'color');\n  define('green', [32, 39], 'color');\n  define('yellow', [33, 39], 'color');\n  define('blue', [34, 39], 'color');\n  define('magenta', [35, 39], 'color');\n  define('cyan', [36, 39], 'color');\n  define('white', [37, 39], 'color');\n  define('gray', [90, 39], 'color');\n  define('grey', [90, 39], 'color');\n\n  define('bgBlack', [40, 49], 'bg');\n  define('bgRed', [41, 49], 'bg');\n  define('bgGreen', [42, 49], 'bg');\n  define('bgYellow', [43, 49], 'bg');\n  define('bgBlue', [44, 49], 'bg');\n  define('bgMagenta', [45, 49], 'bg');\n  define('bgCyan', [46, 49], 'bg');\n  define('bgWhite', [47, 49], 'bg');\n\n  define('blackBright', [90, 39], 'bright');\n  define('redBright', [91, 39], 'bright');\n  define('greenBright', [92, 39], 'bright');\n  define('yellowBright', [93, 39], 'bright');\n  define('blueBright', [94, 39], 'bright');\n  define('magentaBright', [95, 39], 'bright');\n  define('cyanBright', [96, 39], 'bright');\n  define('whiteBright', [97, 39], 'bright');\n\n  define('bgBlackBright', [100, 49], 'bgBright');\n  define('bgRedBright', [101, 49], 'bgBright');\n  define('bgGreenBright', [102, 49], 'bgBright');\n  define('bgYellowBright', [103, 49], 'bgBright');\n  define('bgBlueBright', [104, 49], 'bgBright');\n  define('bgMagentaBright', [105, 49], 'bgBright');\n  define('bgCyanBright', [106, 49], 'bgBright');\n  define('bgWhiteBright', [107, 49], 'bgBright');\n\n  colors.ansiRegex = ANSI_REGEX;\n  colors.hasColor = colors.hasAnsi = str => {\n    colors.ansiRegex.lastIndex = 0;\n    return typeof str === 'string' && str !== '' && colors.ansiRegex.test(str);\n  };\n\n  colors.alias = (name, color) => {\n    let fn = typeof color === 'string' ? colors[color] : color;\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Expected alias to be the name of an existing color (string) or a function');\n    }\n\n    if (!fn.stack) {\n      Reflect.defineProperty(fn, 'name', { value: name });\n      colors.styles[name] = fn;\n      fn.stack = [name];\n    }\n\n    Reflect.defineProperty(colors, name, {\n      configurable: true,\n      enumerable: true,\n      set(value) {\n        colors.alias(name, value);\n      },\n      get() {\n        let color = input => style(input, color.stack);\n        Reflect.setPrototypeOf(color, colors);\n        color.stack = this.stack ? this.stack.concat(fn.stack) : fn.stack;\n        return color;\n      }\n    });\n  };\n\n  colors.theme = custom => {\n    if (!isObject(custom)) throw new TypeError('Expected theme to be an object');\n    for (let name of Object.keys(custom)) {\n      colors.alias(name, custom[name]);\n    }\n    return colors;\n  };\n\n  colors.alias('unstyle', str => {\n    if (typeof str === 'string' && str !== '') {\n      colors.ansiRegex.lastIndex = 0;\n      return str.replace(colors.ansiRegex, '');\n    }\n    return '';\n  });\n\n  colors.alias('noop', str => str);\n  colors.none = colors.clear = colors.noop;\n\n  colors.stripColor = colors.unstyle;\n  colors.symbols = require('./symbols');\n  colors.define = define;\n  return colors;\n};\n\nmodule.exports = create();\nmodule.exports.create = create;\n"]},"metadata":{},"sourceType":"script"}