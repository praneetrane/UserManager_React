{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\React JS\\\\React-Complete Guide (Udemy)\\\\UserManager_React\\\\src\\\\components\\\\Users\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport styles from \"./AddUser.module.css\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport Wrapper from \"../Helpers/Wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  //---- useStates to collect user inputs\n  const [enteredUserName, setEnteredUserName] = useState(\"\");\n  const [enteredAge, setEnteredAge] = useState(\"\");\n  const [error, setError] = useState(); //----username handler\n\n  const userNameChangedHandler = event => {\n    setEnteredUserName(event.target.value);\n  }; // age change handler\n\n\n  const ageChangedHandler = event => {\n    setEnteredAge(event.target.value);\n  }; //Add user handler\n\n\n  const addUserHandler = event => {\n    event.preventDefault(); //----if state isValid is false then we should not proceed with handler\n\n    if (enteredUserName.trim().length === 0 || enteredAge.trim().length === 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid name and age (non-empty values).\"\n      });\n      return;\n    } //Generally in javascript and in DOM all the input will be in string but by just comparing it <1 will work.\n    //But to super safe we can prepent enteredAge with '+' symbol (+enteredAge)\n\n\n    if (+enteredAge < 1) {\n      setError({\n        title: \"Invalid age\",\n        message: \"Please enter a valid age (>0).\"\n      });\n      return;\n    }\n\n    props.onAddUser(enteredUserName, enteredAge); //----Reseting the values\n\n    setEnteredUserName(\"\");\n    setEnteredAge(\"\");\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    /*#__PURE__*/\n    //Instead of our created <Wrapper/> component. We can user React built-in Fragment i.e.<React.Fragment></React.Fragment>  or <></>\n    _jsxDEV(Wrapper, {\n      children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n        title: error.title,\n        message: error.message,\n        onConfirm: errorHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: styles.input,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: addUserHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            value: enteredUserName,\n            type: \"text\",\n            onChange: userNameChangedHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"age\",\n            children: \"Age (Years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"age\",\n            value: enteredAge,\n            type: \"number\",\n            onChange: ageChangedHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(AddUser, \"xwj1u4A+y433k/dAXhYEgkc5HX8=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["D:/Learning/React JS/React-Complete Guide (Udemy)/UserManager_React/src/components/Users/AddUser.js"],"names":["React","useState","Card","Button","styles","ErrorModal","Wrapper","AddUser","props","enteredUserName","setEnteredUserName","enteredAge","setEnteredAge","error","setError","userNameChangedHandler","event","target","value","ageChangedHandler","addUserHandler","preventDefault","trim","length","title","message","onAddUser","errorHandler","input"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport Button from \"../UI/Button\";\r\nimport styles from \"./AddUser.module.css\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\n\r\nimport Wrapper from \"../Helpers/Wrapper\";\r\n\r\nconst AddUser = (props) => {\r\n  //---- useStates to collect user inputs\r\n  const [enteredUserName, setEnteredUserName] = useState(\"\");\r\n  const [enteredAge, setEnteredAge] = useState(\"\");\r\n  const [error, setError] = useState();\r\n  //----username handler\r\n  const userNameChangedHandler = (event) => {\r\n    setEnteredUserName(event.target.value);\r\n  };\r\n\r\n  // age change handler\r\n  const ageChangedHandler = (event) => {\r\n    setEnteredAge(event.target.value);\r\n  };\r\n\r\n  //Add user handler\r\n  const addUserHandler = (event) => {\r\n    event.preventDefault();\r\n    //----if state isValid is false then we should not proceed with handler\r\n\r\n    if (enteredUserName.trim().length === 0 || enteredAge.trim().length === 0) {\r\n      setError({\r\n        title: \"Invalid input\",\r\n        message: \"Please enter a valid name and age (non-empty values).\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    //Generally in javascript and in DOM all the input will be in string but by just comparing it <1 will work.\r\n    //But to super safe we can prepent enteredAge with '+' symbol (+enteredAge)\r\n    if (+enteredAge < 1) {\r\n      setError({\r\n        title: \"Invalid age\",\r\n        message: \"Please enter a valid age (>0).\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    props.onAddUser(enteredUserName, enteredAge);\r\n\r\n    //----Reseting the values\r\n    setEnteredUserName(\"\");\r\n    setEnteredAge(\"\");\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n  return (\r\n    //Instead of our created <Wrapper/> component. We can user React built-in Fragment i.e.<React.Fragment></React.Fragment>  or <></>\r\n    <Wrapper>\r\n      {error && <ErrorModal title={error.title} message={error.message}  onConfirm={errorHandler}/>}\r\n      <Card className={styles.input}>\r\n        <form onSubmit={addUserHandler}>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            id=\"username\"\r\n            value={enteredUserName}\r\n            type=\"text\"\r\n            onChange={userNameChangedHandler}\r\n          />\r\n\r\n          <label htmlFor=\"age\">Age (Years)</label>\r\n          <input\r\n            id=\"age\"\r\n            value={enteredAge}\r\n            type=\"number\"\r\n            onChange={ageChangedHandler}\r\n          />\r\n\r\n          <Button type=\"submit\">Add User</Button>\r\n        </form>\r\n      </Card>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n"]},"metadata":{},"sourceType":"module"}